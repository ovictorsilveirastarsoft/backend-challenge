version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: usuario
      DB_PASSWORD: senha
      DB_NAME: meu_banco
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BROKER: kafka:9092
      REDIS_DNS: redis://redis:6379
    ports:
      - '3000:3000'
    depends_on:
      - db
      - redis
      - kafka

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: senha
      POSTGRES_DB: meu_banco
    ports:
      - '5433:5433'
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKAJS_NO_PARTITIONER_WARNING: '1'
      KAFKA_MESSAGE_MAX_BYTES: 200000000
      KAFKA_MAX_REQUEST_SIZE: 200000000
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data

volumes:
  db_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data:
